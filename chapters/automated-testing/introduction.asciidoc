Automated Testing
=================
We are going to see how we can use techniques like TDD to write tests and code that can catch errors before going into production.

View Tests
----------
The most important part of a web application is the view, this is what customers look like, how can you not afford to invest time into writing view tests, doing so will bring down the manually testing aspect and allow for faster feedback when creating modifying the components.

So how do we going about this, we have seen that when we first get start creating components we use all the CQ availble page objects to interactive with the CMS, then we looked how to remove this and hide it into java classes and move the construction of the beans into tag libraries, we also split the component up into cq component code and pure html/jstl code this is going to allow us to use the non cq code outside into a jee container for testing.

We need to setup a container to run our views in and a webapp.
We going to use jetty for the container and configure it to map the non cq components to its context, and use jsoup to connect o the server and junit to test the views. 
They say you shouldn't touch the network for a unit test, but as this is only localhost and you can disable the network to run it I think this is ok for jsp view tests, as if you wanted to use code its a lot of effort.

[source,java]
----
sys::[cd cq5_tutorial/global/global-views/src/main/java/smithstone/components/forms/; git checkout master ; git show a854c58:./FakeContactFormModel.java]
----
[source,java]
----
sys::[cd cq5_tutorial/global/global-views/src/main/java/smithstone/components/forms/; git checkout master; git show a854c58:./FakeContactFormView.java]
----
[source,jsp]
----
sys::[cd cq5_tutorial/global/global-views/src/main/webapp/fixtures/components/forms/contact_form/; git checkout master ; git show a854c58:./form_test.jsp]
----
[source,java]
----
sys::[cd cq5_tutorial/global/global-views/src/test/java/smithstone/components/form/; git checkout master; git show a854c58:./ContactFormTest.java]
----

What we have done here to create a fake implementation of the model and view and create them on the jsp and use the jsp useBean tag to create the form, we have steped away from the best implementation to show how to create a view test and in doing so duplicated the effort of creating necessary beans and allowed for the code to become factured.
We will no see how to make this better using factories that are controlled by the classpath, which introduces global objects which is considered bad practice, but I don't want to introduce any unnecessary dependencies like , spring , google guice just yet.

[source,jsp]
----
sys::[cd cq5_tutorial/global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/forms/contact_form/; git checkout master; git show 63f9f8a:./contact_form.jsp]
----

[source,jsp]
----
sys::[cd cq5_tutorial/global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/forms/contact_form/; git checkout master; git show 63f9f8a:./form.jsp]
----

[source,jsp]
----
sys::[cd cq5_tutorial/global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/page/homepage/; git checkout master; git show 63f9f8a:./homepage.jsp]
----


[source,xml]
----
sys::[cd cq5_tutorial/global/global-cq-web-factories/; git checkout master; git show 63f9f8a:./pom.xml]
----

[source,java]
----
sys::[cd cq5_tutorial/global/global-cq-web-factories/src/main/java/smithstone/global/factories/; git checkout master ; git show 63f9f8a:./ContactFormFactory.java]
----

[source,xml]
----
sys::[cd cq5_tutorial/global/global-cq-web/; git checkout master; git show 63f9f8a:./pom.xml]
----

[source,java]
----
sys::[cd cq5_tutorial/global/global-cq-web/src/main/java/smithstone/cq/global/web/; git checkout master; git show 63f9f8a:./ContactFormFactoryTag.java]
----

[source,java]
----
sys::[cd cq5_tutorial/global/global-views/src/main/java/smithstone/global/factories/; git checkout master; git show 63f9f8a:./ContactFormFactory.java]
----


[source,xml]
----
sys::[cd cq5_tutorial/global/global-views/src/main/webapp/WEB-INF/; git checkout master; git show 63f9f8a:./web.xml]
----

[source,jsp]
----
sys::[cd cq5_tutorial/global/global-views/src/main/webapp/fixtures/components/forms/contact_form/; git checkout master; git show 63f9f8a:./form_test.jsp]
----

[source,java]
----
sys::[cd cq5_tutorial/global/global-views/src/test/java/smithstone/components/form/; git checkout master; git show 63f9f8a:./ContactFormTest.java]
----


[source,xml]
----
sys::[cd cq5_tutorial/global/global-web-factories/; git checkout master; git show 63f9f8a:./pom.xml]
----


[source,java]
----
sys::[cd cq5_tutorial/global/global-web-factories/src/main/java/smithstone/global/factories/; git checkout master; git show 63f9f8a:./ContactFormFactory.java]
----


[source,xml]
----
sys::[cd cq5_tutorial/global/global-web/; git checkout master; git show 63f9f8a:./pom.xml]
----

[source,xml]
----
sys::[cd cq5_tutorial/global/global-web/src/main/resources/META-INF/; git checkout master; git show 63f9f8a:./globalweb.tld]
----

[source,xml]
----
sys::[cd cq5_tutorial/global/; git checkout master; git show 63f9f8a:./pom.xml]
----

What we have here to create an abstract factory in a couple of modules a fake one and a cq one both have the same structure and class name this is so osgi can resolve the class when we deploy the tag without a implemenation of the factory, then when the class is requested the class loader will return an instance of the factory that is available on the classpath.

Javascript Tests
----------------
Coming Soon

OSGI Tests
----------
Coming Soon

Unit Tests
----------
Coming Soon

Integration Tests
-----------------
Coming Soon

Specification By Example
------------------------
Coming Soon

Selenium
~~~~~~~~
Coming Soon

None Browser
~~~~~~~~~~~~
Coming Soon
