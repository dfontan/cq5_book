:source-highlighter: pygments

== Simple Web Site
So the idea is get a simple website up and running with no dynamic parts.

=== Setup
There are a number of ways to create a site we can use VLT to obtain the demo structure of create our own.

We are going to create our own site using maven

.maven module structure
------------------
sys::[cd ../tutorial ; git checkout master; git checkout 59a082 ; tree -a global-cq-content ]
------------------

IMPORTANT: replace *smithstone* with what ever you want your site to be known as

To get a site working we need to create a template and a template is special slingresource of cq:Template


We need to setup the maven module so generate the following

.pom.xml
[source,xml,numbered]
------------------
sys::[cd ../tutorial; git checkout master; git show 74ae45e:global-cq-content/pom.xml]
------------------
<1> TODO
<2> TODO
<3> TODO
<4> TODO
<5> TODO
<6> TODO
<7> TODO
<8> TODO
<9> TODO

=== Simple Template and Page
The directory structure we are going to create

.Project structure
------------------
sys::[cd ../tutorial ; git checkout master ; git checkout 74ae45e ; tree -a global-cq-content/src]
------------------

-----------------
sys::[cd ../tutorial ; git checkout master ; git checkout 74ae45e ; tree -a global-cq-content/src/main/resources/META-INF]
------------------

------------------
sys::[cd ../tutorial ; git checkout master ; git checkout 74ae45e ; tree -a global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/page]
------------------
The above directory contains our page component which is called homepage, this is just a single file at the minute
with all the necessary content in there

.apps/smithstone/components/page/homepage/homepage.jsp
[source,jsp]
-----------------
sys::[cd ../tutorial ; git checkout master ; git show 74ae45e:global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/page/homepage/homepage.jsp]
-----------------
<1> Includes the necessary files for CQ resources
<2> Includes the necessary file for CQ initialisation for editor mode

.apps/smithstone/components/page/homepage/.content.xml
[source,xml]
------------------
sys::[cd ../tutorial ; git checkout master ; git show 74ae45e:global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/page/homepage/.content.xml]
------------------
NOTE: Figure out what this file does

------------------
sys::[cd ../tutorial ;git checkout master ; git checkout 74ae45e;  tree -a global-cq-content/src/main/resources/jcr_root/apps/smithstone/templates]
------------------

Inside of the template is only a .content.xml file to describe what type of resource this

[source,xml,numbered]
------------------
sys::[cd ../tutorial ; git checkout master ; git show 74ae45e:global-cq-content/src/main/resources/jcr_root/apps/smithstone/templates/homepage/.content.xml]
------------------
NOTE: Figure out what this file does

------------------
sys::[cd ../tutorial ;git checkout master ; git checkout 74ae45e;  tree -a global-cq-content/src/main/resources/jcr_root/etc/designs]
------------------
The design structure holds all assets like css, images, videos, js and since we dont have any look and feel there is
nothing in there at the minute.


Once we have all these files we are ready to package up and install into the CQ instance this can be done using maven
-------------------
sys::[cd ../tutorial/global-cq-content ; git checkout 74ae45e ; mvn clean package]
-------------------
To upload the jar to cq run the maven plugin from inside globa-cq-content directory
----
mvn crx:install -Dcrx.packageFileName=target/global-cq-content-1.0-SNAPSHOT.jar
----


We have now built the global_cq_content package and installed into cq, we can now create a page based on this template.

If you visit http://localhost:4502/siteadmin you will be greeted with the following screen, we can start to build up a
site that is just composed of the simple homepage template , which will give you nothing but empty pages.

Since we have nothing on the page lets alter the template to include the page title

[source,jsp,numbered]
-----------------
sys::[cd ../tutorial; git checkout master ; git show 0ace70c:global-cq-content/src/main/resources/jcr_root/apps/smithstone/components/page/homepage/homepage.jsp]
-----------------

<1> We have used the cq currentPage object to get access to the title


=== Summary
We have created a simple template and used that template as a base for some files, we've added the title to each page using the
exposed CQ objects, not a complex introduction into CQ development.
